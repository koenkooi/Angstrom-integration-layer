From 3fb16a9ff349672beb2818d1139bb689ee424da4 Mon Sep 17 00:00:00 2001
From: irar <irar@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Thu, 2 Jun 2011 07:02:57 +0000
Subject: [PATCH]         PR tree-optimization/49093
         * tree-vect-data-refs.c (vect_analyze_data_refs): Fail for
         volatile data references.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/gcc-4_6-branch@174559 138bc75d-0d04-0410-961f-82ee72b054a4

index 5ae1848..20fdeec 100644
new file mode 100644
index 0000000..b8bded6
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/vect/pr49093.c
@@ -0,0 +1,22 @@
+/* { dg-do compile } */
+/* { dg-options "-O1 -ftree-vectorize -fdump-tree-vect-details -fno-tree-fre" } */
+
+volatile unsigned char g_324[4] = {0, 1, 0, 1};
+void foo (int);
+int x, y;
+void func_81(void)
+{
+    int l_466, l_439[7] = {0}, g_97;
+lbl_473:
+    if (x) {
+        for (g_97 = 0; (g_97 < 4); ++g_97) {
+            if (y)
+              goto lbl_473;
+            g_324[g_97];
+            l_466 = l_439[g_97];
+        }
+        foo(l_466);
+    }
+}
+
+/* { dg-final { cleanup-tree-dump "vect" } } */
diff --git a/gcc/tree-vect-data-refs.c b/gcc/tree-vect-data-refs.c
index a1437b5..db5098c 100644
--- a/gcc/tree-vect-data-refs.c
+++ b/gcc/tree-vect-data-refs.c
@@ -2577,6 +2577,16 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,
             return false;
         }
 
+      if (TREE_THIS_VOLATILE (DR_REF (dr)))
+        {
+          if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))
+            {
+              fprintf (vect_dump, "not vectorized: volatile type ");
+              print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);
+            }
+          return false;
+        }
+
       base = unshare_expr (DR_BASE_ADDRESS (dr));
       offset = unshare_expr (DR_OFFSET (dr));
       init = unshare_expr (DR_INIT (dr));
-- 
1.7.0.4

