From 5aac027a2e060e22e5fd400e57c021ef0e82fe4c Mon Sep 17 00:00:00 2001
From: janis <janis@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Fri, 10 Jun 2011 18:26:28 +0000
Subject: [PATCH] 	* lib/target-supports.exp
 	(check_effective_target_arm_neon_fp16_ok_nocache): Return 0 if
 	multilib flags use -mfpu with a value other than neon-fp16.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/gcc-4_6-branch@174921 138bc75d-0d04-0410-961f-82ee72b054a4

index d2c6fff..a1d94d9 100644
--- a/gcc/testsuite/lib/target-supports.exp
+++ b/gcc/testsuite/lib/target-supports.exp
@@ -1941,7 +1941,7 @@ proc add_options_for_arm_neon_fp16 { flags } {
 }
 
 # Return 1 if this is an ARM target supporting -mfpu=neon-fp16
-# -mfloat-abi=softfp or equivalent options.  Some multilibs may be
+# -mfloat-abi=softfp or equivalent options.  Skip multilibs that are
 # incompatible with these options.  Also set et_arm_neon_flags to the
 # best options to add.
 
@@ -1949,6 +1949,9 @@ proc check_effective_target_arm_neon_fp16_ok_nocache { } {
     global et_arm_neon_fp16_flags
     set et_arm_neon_fp16_flags ""
     if { [check_effective_target_arm32] } {
+	if [check-flags [list "" { *-*-* } { "-mfpu=*" } { "-mfpu=neon-fp16*" } ]] {
+	    return 0
+	}
 	# Always add -mfpu=neon-fp16, since there is no preprocessor
 	# macro for FP16 support.
 	foreach flags {"-mfpu=neon-fp16" "-mfpu=neon-fp16 -mfloat-abi=softfp"} {
-- 
1.7.0.4

