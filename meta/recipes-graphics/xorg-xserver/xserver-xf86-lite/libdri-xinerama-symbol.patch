Index: xorg-server-1.5.0/hw/xfree86/dri/dri.c
===================================================================
--- xorg-server-1.5.0.orig/hw/xfree86/dri/dri.c	2008-09-24 17:43:04.000000000 +0100
+++ xorg-server-1.5.0/hw/xfree86/dri/dri.c	2008-09-24 17:46:38.000000000 +0100
@@ -73,10 +73,6 @@
 
 #define PCI_BUS_NO_DOMAIN(bus) ((bus) & 0xffu)
 
-#if !defined(PANORAMIX)
-extern Bool noPanoramiXExtension;
-#endif
-
 static int DRIEntPrivIndex = -1;
 static DevPrivateKey DRIScreenPrivKey = &DRIScreenPrivKey;
 static DevPrivateKey DRIWindowPrivKey = &DRIWindowPrivKey;
@@ -307,7 +303,6 @@
     drm_context_t *       reserved;
     int                 reserved_count;
     int                 i;
-    Bool                xineramaInCore = FALSE;
     DRIEntPrivPtr       pDRIEntPriv;
     ScrnInfoPtr         pScrn = xf86Screens[pScreen->myNum];
     DRIContextFlags	flags    = 0;
@@ -320,20 +315,13 @@
 	return FALSE;
     }
 
-    /*
-     * If Xinerama is on, don't allow DRI to initialise.  It won't be usable
-     * anyway.
-     */
-    if (xf86LoaderCheckSymbol("noPanoramiXExtension"))
-	xineramaInCore = TRUE;
-
-    if (xineramaInCore) {
-	if (!noPanoramiXExtension) {
-	    DRIDrvMsg(pScreen->myNum, X_WARNING,
-		"Direct rendering is not supported when Xinerama is enabled\n");
-	    return FALSE;
-	}
+#if defined(PANORAMIX)
+    if (!noPanoramiXExtension) {
+        DRIDrvMsg(pScreen->myNum, X_WARNING,
+            "Direct rendering is not supported when Xinerama is enabled\n");
+        return FALSE;
     }
+#endif
 
     if (!DRIOpenDRMMaster(pScrn, pDRIInfo->SAREASize,
 			  pDRIInfo->busIdString,
