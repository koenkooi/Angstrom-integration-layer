#!/bin/bash
#
# Copyright (c) 2005-2009 Wind River Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

usage() {
	echo "Usage: $0 {start|stop|restart} <nfs-export-dir>"
}

if [ $# != 2 ]; then
	usage
	exit 1
fi

if [[ "$1" != "start" && "$1" != "stop" && "$1" != "restart" ]]; then
	echo "Unknown command '$1'"
	usage
	exit 1
fi

if [ ! -d "$2" ]; then
	echo "Error: '$2' does not exist"
	usage
	exit 1
fi
# Ensure the nfs-export-dir is an absolute path
NFS_EXPORT_DIR=$(cd "$2" && pwd)

SYSROOT_SETUP_SCRIPT=`which oe-find-native-sysroot`
if [ -z "$SYSROOT_SETUP_SCRIPT" ]; then
    echo "Error: Unable to find the oe-find-native-sysroot script"
    echo "Did you forget to source your build environment setup script?"
    exit 1
fi
. $SYSROOT_SETUP_SCRIPT

if [ ! -e "$OECORE_NATIVE_SYSROOT/usr/sbin/rpc.mountd" ]; then
	echo "Error: Unable to find rpc.mountd binary in $OECORE_NATIVE_SYSROOT/usr/sbin/"

	if [ "x$POKY_DISTRO_VERSION" = "x" ]; then
	    echo "Have you run 'bitbake meta-ide-support'?"
	else
	    echo "This shouldn't happen - something is missing from your toolchain installation"
	fi
	exit 1
fi

if [ ! -d ~/.runqemu-sdk ]; then
	mkdir -p ~/.runqemu-sdk
fi

NFS_INSTANCE=${NFS_INSTANCE:=0}
EXPORTS=~/.runqemu-sdk/exports$NFS_INSTANCE
RMTAB=~/.runqemu-sdk/rmtab$NFS_INSTANCE
NFSPID=~/.runqemu-sdk/nfs$NFS_INSTANCE.pid
MOUNTPID=~/.runqemu-sdk/mount$NFS_INSTANCE.pid

PSEUDO_OPTS="-P $OECORE_NATIVE_SYSROOT/usr"
PSEUDO_LOCALSTATEDIR="$NFS_EXPORT_DIR/var/pseudo"
export PSEUDO_LOCALSTATEDIR

if [ ! -d "$PSEUDO_LOCALSTATEDIR" ]; then
	echo "Error: $PSEUDO_LOCALSTATEDIR does not exist."
	echo "Did you create the export directory using runqemu-extract-sdk?"
	exit 1	
fi

# rpc.mountd RPC port
NFS_MOUNTPROG=$[ 21111 + $NFS_INSTANCE ]
# rpc.nfsd RPC port
NFS_NFSPROG=$[ 11111 + $NFS_INSTANCE ]
# NFS port number
NFS_PORT=$[ 3049 + $NFS_INSTANCE ]

## For debugging you would additionally add
## --debug all
MOUNTD_OPTS="--allow-non-root --mount-pid $MOUNTPID -f $EXPORTS --rmtab $RMTAB --prog $NFS_MOUNTPROG -r"
NFSD_OPTS="--allow-non-root --nfs-pid $NFSPID -f $EXPORTS --prog $NFS_NFSPROG -P $NFS_PORT -r"

# Setup the exports file
if [ "$1" = "start" ]; then
	echo "Creating exports file..."
	echo "$NFS_EXPORT_DIR (rw,async,no_root_squash,no_all_squash,insecure)" > $EXPORTS
fi

# See how we were called.
case "$1" in
  start)
	echo "Starting User Mode rpc.mountd"
	echo "  $PSEUDO $PSEUDO_OPTS $OECORE_NATIVE_SYSROOT/usr/sbin/rpc.mountd $MOUNTD_OPTS"
	$PSEUDO $PSEUDO_OPTS $OECORE_NATIVE_SYSROOT/usr/sbin/rpc.mountd $MOUNTD_OPTS
	if [ ! $? = 0 ]; then
	    echo "====================="
	    echo "Error starting MOUNTD"
	    echo "====================="
	    ps -ef | grep -v grep | grep rpcbind 2>&1 > /dev/null
	    if [ $? = 0 ] ; then
		echo "  If you see an error above that says:"
		echo "    RPC: Authentication error; why = Client credential too weak"
		echo "  You need to change the startup of rpcbind"
		echo "  on your host by doing the following as root:"
		echo "==============================================="
		echo "  According to /etc/sysconfig/rpcbind, then "
		echo "    echo RPCBIND_ARGS=-i >> /etc/sysconfig/rpcbind"
		echo "  or"
		echo "    echo RPCBIND_OPTIONS=-i >> /etc/sysconfig/rpcbind"
		echo "    /etc/init.d/rpcbind restart"
		echo "==============================================="
	    fi
	    exit 1
	fi
	echo "Starting User Mode nfsd"
	echo "  $PSEUDO $PSEUDO_OPTS $OECORE_NATIVE_SYSROOT/usr/sbin/rpc.nfsd $NFSD_OPTS"
	$PSEUDO $PSEUDO_OPTS $OECORE_NATIVE_SYSROOT/usr/sbin/rpc.nfsd $NFSD_OPTS
	if [ ! $? = 0 ]; then
	    echo "Error starting nfsd"
	    exit 1
	fi
	# Check to make sure everything started ok.
	if [ ! -f $MOUNTPID ]; then
	    echo "rpc.mountd did not start correctly"
	    exit 1
	fi
	if [ ! -f $NFSPID ]; then
	    echo "rpc.nfsd did not start correctly"
	    exit 1
	fi
	ps -fp `cat $MOUNTPID` > /dev/null 2> /dev/null
	if [ ! $? = 0 ]; then
	    echo "rpc.mountd did not start correctly"
	    exit 1
	fi
	ps -fp `cat $NFSPID` > /dev/null 2> /dev/null
	if [ ! $? = 0 ]; then
	    echo "rpc.nfsd did not start correctly"
	    exit 1
	fi
	echo " "
	echo "On your target please remember to add the following options for NFS"
	echo "nfsroot=IP_ADDRESS:$NFS_EXPORT_DIR,nfsvers=2,mountprog=$NFS_MOUNTPROG,nfsprog=$NFS_NFSPROG,udp"
	;;
  stop)
	if [ -f "$MOUNTPID" ]; then
	    echo "Stopping rpc.mountd"
	    kill `cat $MOUNTPID`
	    rm -f $MOUNTPID
	else
	    echo "No PID file, not stopping rpc.mountd"
	fi
	if [ -f "$NFSPID" ]; then
	    echo "Stopping rpc.nfsd"
	    kill `cat $NFSPID`
	    rm -f $NFSPID
	else
	    echo "No PID file, not stopping rpc.nfsd"
	fi
	if [ -f "$EXPORTS" ]; then
        echo "Removing exports file"
        rm -f $EXPORTS
	fi
	;;
  restart)
	$0 stop $NFS_EXPORT_DIR
	$0 start $NFS_EXPORT_DIR 
	if [ ! $? = 0 ]; then
	    exit 1
	fi
	;;
  *)
	echo "$0 {start|stop|restart} <nfs-export-dir>"
	;;
esac

exit 0
